{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Model_5_light_test","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOvM4rygLO72KOJN+21Etl0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"widgets":{"application/vnd.jupyter.widget-state+json":{"d30a11b73dd84584b88f2c46d423fce1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_493c426944974e2788b8805afa9b3ac0","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_5b2f19431ab141c4b9cc75dcb57bf812","IPY_MODEL_b222c30c82c748eda0e43c1172f00712"]}},"493c426944974e2788b8805afa9b3ac0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"5b2f19431ab141c4b9cc75dcb57bf812":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_5af0c19ad290429fadf15abb90a9c0ef","_dom_classes":[],"description":"100%","_model_name":"FloatProgressModel","bar_style":"success","max":5,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":5,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_b97d41205fad4ffda2f3510c28a6d7d3"}},"b222c30c82c748eda0e43c1172f00712":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_4514b2d33c394427bda636f837d7a237","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 5/5 [16:02&lt;00:00, 192.47s/it]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_b28844e6cfbb466f88b48ad3de9af224"}},"5af0c19ad290429fadf15abb90a9c0ef":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"b97d41205fad4ffda2f3510c28a6d7d3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"4514b2d33c394427bda636f837d7a237":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"b28844e6cfbb466f88b48ad3de9af224":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"98ee288b726b4c759097aa393f5427d4":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_578a3f2cf1ef41e9818d9e847dc09933","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_025c959d1e1149a2aa4fea448d4c1ae6","IPY_MODEL_762fa91dd67e49eab6b8357297659866"]}},"578a3f2cf1ef41e9818d9e847dc09933":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"025c959d1e1149a2aa4fea448d4c1ae6":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_180284b9c0444be6b172d301453412b1","_dom_classes":[],"description":"100%","_model_name":"FloatProgressModel","bar_style":"success","max":5,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":5,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_50b49ee003114761afba366637f4a7ca"}},"762fa91dd67e49eab6b8357297659866":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_4a5a7f49a9bd4f639f710e49624446c8","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 5/5 [26:45&lt;00:00, 321.19s/it]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_881aadee583c4345b6543693f4a84f64"}},"180284b9c0444be6b172d301453412b1":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"50b49ee003114761afba366637f4a7ca":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"4a5a7f49a9bd4f639f710e49624446c8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"881aadee583c4345b6543693f4a84f64":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"EQO2bqx5wbca","colab_type":"text"},"source":["Модуль для расчета алгоритма типа 'logistic' с фичами по товарам и без, с кроссвалидацией"]},{"cell_type":"code","metadata":{"id":"FZAl3BS4Njp9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":306},"executionInfo":{"status":"ok","timestamp":1596033379251,"user_tz":-180,"elapsed":13403,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"da5dcc1b-b1ec-4ffd-8860-1403d42b9f3c"},"source":["pip install lightfm"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting lightfm\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/e9/8e/5485ac5a8616abe1c673d1e033e2f232b4319ab95424b42499fabff2257f/lightfm-1.15.tar.gz (302kB)\n","\r\u001b[K     |█                               | 10kB 16.8MB/s eta 0:00:01\r\u001b[K     |██▏                             | 20kB 1.7MB/s eta 0:00:01\r\u001b[K     |███▎                            | 30kB 2.2MB/s eta 0:00:01\r\u001b[K     |████▍                           | 40kB 2.5MB/s eta 0:00:01\r\u001b[K     |█████▍                          | 51kB 2.0MB/s eta 0:00:01\r\u001b[K     |██████▌                         | 61kB 2.2MB/s eta 0:00:01\r\u001b[K     |███████▋                        | 71kB 2.5MB/s eta 0:00:01\r\u001b[K     |████████▊                       | 81kB 2.7MB/s eta 0:00:01\r\u001b[K     |█████████▊                      | 92kB 2.9MB/s eta 0:00:01\r\u001b[K     |██████████▉                     | 102kB 2.7MB/s eta 0:00:01\r\u001b[K     |████████████                    | 112kB 2.7MB/s eta 0:00:01\r\u001b[K     |█████████████                   | 122kB 2.7MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 133kB 2.7MB/s eta 0:00:01\r\u001b[K     |███████████████▏                | 143kB 2.7MB/s eta 0:00:01\r\u001b[K     |████████████████▎               | 153kB 2.7MB/s eta 0:00:01\r\u001b[K     |█████████████████▍              | 163kB 2.7MB/s eta 0:00:01\r\u001b[K     |██████████████████▍             | 174kB 2.7MB/s eta 0:00:01\r\u001b[K     |███████████████████▌            | 184kB 2.7MB/s eta 0:00:01\r\u001b[K     |████████████████████▋           | 194kB 2.7MB/s eta 0:00:01\r\u001b[K     |█████████████████████▊          | 204kB 2.7MB/s eta 0:00:01\r\u001b[K     |██████████████████████▊         | 215kB 2.7MB/s eta 0:00:01\r\u001b[K     |███████████████████████▉        | 225kB 2.7MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 235kB 2.7MB/s eta 0:00:01\r\u001b[K     |██████████████████████████      | 245kB 2.7MB/s eta 0:00:01\r\u001b[K     |███████████████████████████     | 256kB 2.7MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 266kB 2.7MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▎  | 276kB 2.7MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▍ | 286kB 2.7MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▍| 296kB 2.7MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 307kB 2.7MB/s \n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from lightfm) (1.18.5)\n","Requirement already satisfied: scipy>=0.17.0 in /usr/local/lib/python3.6/dist-packages (from lightfm) (1.4.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from lightfm) (2.23.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests->lightfm) (2.10)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests->lightfm) (2020.6.20)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests->lightfm) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests->lightfm) (1.24.3)\n","Building wheels for collected packages: lightfm\n","  Building wheel for lightfm (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for lightfm: filename=lightfm-1.15-cp36-cp36m-linux_x86_64.whl size=707639 sha256=46f0cfdb82717cb6d7ebe626885137a9335434ff4e9d2b300e9abd6b84685180\n","  Stored in directory: /root/.cache/pip/wheels/eb/bb/ac/188385a5da6627956be5d9663928483b36da576149ab5b8f79\n","Successfully built lightfm\n","Installing collected packages: lightfm\n","Successfully installed lightfm-1.15\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"nkf06qVWTssn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":122},"executionInfo":{"status":"ok","timestamp":1596033400212,"user_tz":-180,"elapsed":34348,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"e019a33d-7efe-4b30-8cd8-0c762d19b153"},"source":["from google.colab import drive\n","drive.mount('/content/drive/')\n","\n","DIR = '/content/drive/My Drive/Colab Notebooks/Data_Sceince/Module_5/recommendationsv4/'\n","DIR_TEST = '/content/drive/My Drive/Colab Notebooks/Data_Sceince/Module_5/TEST/'"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive/\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"XFzmuwu8TrAC","colab_type":"code","colab":{}},"source":["%matplotlib inline\n","import numpy as np # linear algebra\n","import pandas as pd\n","from sklearn.model_selection import KFold\n","from sklearn.model_selection import StratifiedKFold\n","from tqdm.notebook import tqdm\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tGl47lXoMGg4","colab_type":"code","colab":{}},"source":["import scipy.sparse as sparse\n","\n","from lightfm import LightFM\n","from lightfm.cross_validation import random_train_test_split\n","from lightfm.evaluation import auc_score, precision_at_k, recall_at_k\n","import sklearn\n","from sklearn.model_selection import train_test_split\n","\n","from lightfm.data import Dataset"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XXzsyYOaL-jd","colab_type":"code","colab":{}},"source":["#Читаем файлы\n","data = pd.read_csv(DIR + 'train.csv',low_memory=False )\n","test = pd.read_csv(DIR +'test.csv',low_memory=False )\n","submission = pd.read_csv(DIR +'sample_submission.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kE96tGJP_18u","colab_type":"code","colab":{}},"source":["# Определяем выбросы, вероятно спам\n","def get_spam(field):\n","  med = data[field].value_counts().describe()['50%']\n","  std = data[field].value_counts().describe()['std']\n","  counts = pd.DataFrame(data[field].value_counts())\n","  spam = list(counts[counts[field] > med + 3 * std].index)\n","  return spam"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"HQkBb4HmA_9i","colab_type":"code","colab":{}},"source":["item_spam = get_spam('itemid')\n","user_spam = get_spam('userid')\n","data = data[~((data['itemid'].isin(item_spam)) & (data['userid'].isin(user_spam)))]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2TzH2tBJFWqR","colab_type":"code","colab":{}},"source":["# Упорядочим наши данные по верифицированности ответа и времени\n","data.sort_values(by = ['verified', 'unixReviewTime'], ascending= True, inplace = True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mraekibqFijF","colab_type":"code","colab":{}},"source":["#Удалим дубли, оставим только по одной паре  пользователь товар, \n","#оставим последний отзыв,считая, что  могут меняться вкусы и качество товаров\n","data.drop_duplicates(subset =['userid','unixReviewTime','itemid'], keep = 'last',inplace = True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_nt0wlm5RytT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596033412299,"user_tz":-180,"elapsed":46406,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"1303de7f-1757-4baf-a466-4b22a1cc5a17"},"source":["len(data), len(test),  len(test)/len(data)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(806942, 285965, 0.35438110793588634)"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"jksQCCCIxf6o","colab_type":"code","colab":{}},"source":["data = data.reset_index()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jPMljSba55Sf","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1596033413750,"user_tz":-180,"elapsed":47841,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"78ed50ec-6609-40e0-eb53-6b0e4882d546"},"source":["# Проверим , что между  asin и itemid однозначное соответствие, что данные корректны\n","data_all = pd.concat([data, test])\n","data_all_test = pd.DataFrame(data_all.groupby(['asin']).itemid.max() - data_all.groupby(['asin']).itemid.min())\n","data_all_test.itemid.value_counts()\n","# должен быть ноль по всей длине датафрейма"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    41320\n","Name: itemid, dtype: int64"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"Q-bYFZGe5uYB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596033414137,"user_tz":-180,"elapsed":48217,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"4d2ebf9f-12bb-4c09-f078-47a71239bf2a"},"source":["#Словарь соответствия asin и itemid\n","mapper = dict(zip(data_all.asin, data_all.itemid))\n","len(mapper)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["41320"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"oU0_1L53469-","colab_type":"code","colab":{}},"source":["import json\n","def get_by_key(field, dict_from, dict_to):\n","   if field in dict_from.keys():\n","       dict_to[mapper.get(dict_from.get('asin'))] = dict_from.get(field)    \n","\n","with open(DIR + 'meta_Grocery_and_Gourmet_Food_small.json') as file:\n","     d_main_category = {}\n","     d_brand = {}\n","     d_category = {}\n","     for line in file.readlines(): \n","         lines = json.loads(line) \n","         get_by_key('brand', lines, d_brand)\n","         get_by_key('main_cat', lines, d_main_category)\n","         get_by_key('category', lines, d_category)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"CvXRM_xi5H6l","colab_type":"code","colab":{}},"source":["set_itemid = set(data['itemid']) | set(test['itemid']) \n","#Подготовим словари с фичами для модели, обеспечим уникальность значения\n","d_brand_ml =  {x:'brand:' + y for x,y in d_brand.items()}\n","d_main_category_ml = {x:'main_cat:' + y for x,y in d_main_category.items()}\n","#Поиграем самой категорией, возьмем самый нижний уровень\n","d_last_category_ml = {x:'last_cat:' + y[-1] for x,y in d_category.items()}"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"AKfiEm_Pyzmi","colab_type":"code","colab":{}},"source":["#Формируем  mapping для всех пользователей и товаров(train + test)\n","\n","dataset = Dataset() #item_identity_features=False)\n","dataset.fit((x for x in pd.concat([data, test])['userid']),\n","            (x for x in pd.concat([data, test])['itemid']))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6PTzxNWwzw7x","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596033423676,"user_tz":-180,"elapsed":57738,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"7c95b7fb-90fe-4850-c873-4914b79ebda0"},"source":["num_users, num_items = dataset.interactions_shape()\n","print('Num users: {}, num_items {}.'.format(num_users, num_items))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Num users: 127496, num_items 41320.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"kcIkOqXh6fGo","colab_type":"code","colab":{}},"source":["# Добавляем фичи по товарам \n","dataset.fit_partial(items=(x for x in d_last_category_ml.keys()),\n","                    item_features=(x for x in d_last_category_ml.values()))\n","\n","dataset.fit_partial(items=(x for x in d_main_category_ml.keys()),\n","                    item_features=(x for x in d_main_category_ml.values()))\n","\n","dataset.fit_partial(items=(x for x in d_brand_ml.keys()),\n","                    item_features=(x for x in d_brand_ml.values()))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kaKhrF3I0az8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1596033426406,"user_tz":-180,"elapsed":60454,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"88556a92-d7fd-472e-9d80-fbd0eb50ffad"},"source":["#Готовим основную матрицу\n","(interactions, weights) = dataset.build_interactions(((x,y,z) \n","              #  for x,y, z in zip(train_data.userid.values,train_data.itemid.values, train_data.rating.values)))\n","                for x,y, z in zip(data.userid.values,data.itemid.values, data.rating.values)))\n","\n","print(repr(interactions))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<127496x41320 sparse matrix of type '<class 'numpy.int32'>'\n","\twith 806942 stored elements in COOrdinate format>\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"JT_G0jjUR8WS","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1596033426827,"user_tz":-180,"elapsed":60864,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"4ed946b3-1160-47f4-aa85-8c5db9d602e8"},"source":["# Готовим фичи по товарам\n","def get_item_features(itemid):\n","   def add_from_dict(dict_):\n","      if dict_.get(itemid):\n","         list_feat.append(dict_.get(itemid)) \n","\n","   list_feat =[]\n","   add_from_dict(d_brand_ml)\n","   add_from_dict(d_last_category_ml)\n","   add_from_dict(d_main_category_ml)\n","   return list_feat\n","\n","item_features = dataset.build_item_features(((x, get_item_features(x))\n","                                               for x in set_itemid ))\n","print(repr(item_features))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<41320x51173 sparse matrix of type '<class 'numpy.float32'>'\n","\twith 164772 stored elements in Compressed Sparse Row format>\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"q-AIr1ds9DEl","colab_type":"code","colab":{}},"source":["# Вытаскиваем словари для преобразований\n","user_id_map, user_feature_map, item_id_map, item_feature_map = dataset.mapping()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Yxut01m9Vnuy","colab_type":"code","colab":{}},"source":["from lightfm import LightFM\n","NUM_THREADS = 8 #число потоков\n","RANDOM_SEED = 32\n","#Гиперпараметры\n","#NUM_EPOCHS, LEARNING_RATE, NUM_COMPONENTS, ALPHA =  [108,0.9307615113531499,156,1.117646374973343e-06]\n","#params = [15,0.1,120,0]  #стартовые параметры\n","params_not_features = [108,0.9307615113531499,156,1.117646374973343e-06] # без фич\n","params =  [54, 0.6695553384725956, 90, 4.527672167401107e-06] #с фичами\n","#params = [119, 0.6357799002551178, 97, 4.8911903142209495e-06]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"liVMBr2BVTrd","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":219,"referenced_widgets":["d30a11b73dd84584b88f2c46d423fce1","493c426944974e2788b8805afa9b3ac0","5b2f19431ab141c4b9cc75dcb57bf812","b222c30c82c748eda0e43c1172f00712","5af0c19ad290429fadf15abb90a9c0ef","b97d41205fad4ffda2f3510c28a6d7d3","4514b2d33c394427bda636f837d7a237","b28844e6cfbb466f88b48ad3de9af224"]},"executionInfo":{"status":"ok","timestamp":1596034389286,"user_tz":-180,"elapsed":1023308,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"1f752b0a-de2c-4898-f0a8-0efa7cb2fe89"},"source":["def prediction_model(mtype, h_params, mat_weights):\n","    num_epochs, learning_rate, num_components, alpha = h_params\n","    model = LightFM(learning_rate = learning_rate, \n","                          loss = mtype, \n","                          no_components = num_components,\n","                          random_state = RANDOM_SEED,\n","                          user_alpha = alpha,\n","                          item_alpha = alpha)\n","    model = model.fit(mat_weights, epochs=num_epochs, num_threads=NUM_THREADS\n","                              , item_features=item_features\n","                              ) \n","    \n","    return(model)\n","\n","\n","N_FOLDS = 5\n","sample_submissions = pd.DataFrame(0,columns=[\"sub_1\"], index=submission.index) # куда пишем предикты по каждой модели\n","score_ls = []\n","X = data[['userid','itemid']]\n","y = data.rating\n","#splits = list(KFold(n_splits=N_FOLDS, shuffle=True, random_state=RANDOM_SEED).split(X, y))\n","\n","splits = list(StratifiedKFold(n_splits=N_FOLDS, shuffle=True, random_state=RANDOM_SEED).split(X, y))\n","\n","\n","for idx, (train_idx, test_idx) in tqdm(enumerate(splits), total=N_FOLDS,):\n","    # use the indexes to extract the folds in the train and validation data\n","    X_train, y_train, X_test, y_test = X.iloc[train_idx], y[train_idx], X.iloc[test_idx], y[test_idx]\n","    # Строим разреженную матрицу \n","#Готовим основную матрицу\n","    (interactions, weights_train) = dataset.build_interactions(((x,y,z) \n","                for x,y, z in zip(X_train.userid.values, X_train.itemid.values, y_train)))\n","    # model for this fold\n","    model_light = prediction_model('logistic', params, weights_train)\n","\n","    # score model on test\n","    test_predict = model_light.predict(X_test.userid.apply(lambda x: user_id_map[x]).values,\n","                              X_test.itemid.apply(lambda x: item_id_map[x]).values \n","                             ,item_features=item_features\n","                             )\n","\n","    test_score = sklearn.metrics.roc_auc_score(y_test,test_predict)\n","    score_ls.append(test_score)\n","    print(f\"{idx+1} Fold Test MAPE: {test_score:0.4f}\")\n","    # submissions\n","    sample_submissions[f'sub_{idx+1}'] = model_light.predict(test.userid.apply(lambda x: user_id_map[x]).values,\n","                                                             test.itemid.apply(lambda x: item_id_map[x]).values\n","                                                             ,item_features=item_features \n","                                                              )\n","    \n","print(f'Mean Score: {np.mean(score_ls):0.5f}')\n","print(f'Std Score: {np.std(score_ls):0.5f}')\n","print(f'Max Score: {np.max(score_ls):0.5f}')\n","print(f'Min Score: {np.min(score_ls):0.5f}')    "],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d30a11b73dd84584b88f2c46d423fce1","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, max=5.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["1 Fold Test MAPE: 0.7399\n","2 Fold Test MAPE: 0.7406\n","3 Fold Test MAPE: 0.7369\n","4 Fold Test MAPE: 0.7373\n","5 Fold Test MAPE: 0.7406\n","\n","Mean Score: 0.73905\n","Std Score: 0.00163\n","Max Score: 0.74062\n","Min Score: 0.73691\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zNe2djy3-SEc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1596034389294,"user_tz":-180,"elapsed":1023314,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"5d340e0b-35f7-4932-b40a-efbd19dd2efd"},"source":["sample_submissions['res'] = sample_submissions.mean(axis=1)\n","sample_submissions"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sub_1</th>\n","      <th>sub_2</th>\n","      <th>sub_3</th>\n","      <th>sub_4</th>\n","      <th>sub_5</th>\n","      <th>res</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.398405</td>\n","      <td>0.429004</td>\n","      <td>0.407645</td>\n","      <td>0.411623</td>\n","      <td>0.417448</td>\n","      <td>0.412825</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.471967</td>\n","      <td>0.416494</td>\n","      <td>0.411615</td>\n","      <td>0.368333</td>\n","      <td>0.430257</td>\n","      <td>0.419733</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.335603</td>\n","      <td>0.512230</td>\n","      <td>0.361715</td>\n","      <td>0.344687</td>\n","      <td>0.373546</td>\n","      <td>0.385556</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.297580</td>\n","      <td>0.293909</td>\n","      <td>0.368526</td>\n","      <td>0.334036</td>\n","      <td>0.354550</td>\n","      <td>0.329720</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.349095</td>\n","      <td>0.195303</td>\n","      <td>0.225379</td>\n","      <td>0.179776</td>\n","      <td>0.152137</td>\n","      <td>0.220338</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>285960</th>\n","      <td>0.463908</td>\n","      <td>0.458010</td>\n","      <td>0.449312</td>\n","      <td>0.499049</td>\n","      <td>0.478608</td>\n","      <td>0.469777</td>\n","    </tr>\n","    <tr>\n","      <th>285961</th>\n","      <td>-0.177673</td>\n","      <td>-0.132821</td>\n","      <td>-0.039137</td>\n","      <td>-0.082233</td>\n","      <td>0.398131</td>\n","      <td>-0.006746</td>\n","    </tr>\n","    <tr>\n","      <th>285962</th>\n","      <td>0.355145</td>\n","      <td>0.254361</td>\n","      <td>0.245107</td>\n","      <td>0.267172</td>\n","      <td>0.237769</td>\n","      <td>0.271911</td>\n","    </tr>\n","    <tr>\n","      <th>285963</th>\n","      <td>0.348215</td>\n","      <td>0.335280</td>\n","      <td>0.315816</td>\n","      <td>0.510952</td>\n","      <td>0.353326</td>\n","      <td>0.372718</td>\n","    </tr>\n","    <tr>\n","      <th>285964</th>\n","      <td>0.503428</td>\n","      <td>0.443747</td>\n","      <td>0.520630</td>\n","      <td>0.525686</td>\n","      <td>0.453440</td>\n","      <td>0.489386</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>285965 rows × 6 columns</p>\n","</div>"],"text/plain":["           sub_1     sub_2     sub_3     sub_4     sub_5       res\n","0       0.398405  0.429004  0.407645  0.411623  0.417448  0.412825\n","1       0.471967  0.416494  0.411615  0.368333  0.430257  0.419733\n","2       0.335603  0.512230  0.361715  0.344687  0.373546  0.385556\n","3       0.297580  0.293909  0.368526  0.334036  0.354550  0.329720\n","4       0.349095  0.195303  0.225379  0.179776  0.152137  0.220338\n","...          ...       ...       ...       ...       ...       ...\n","285960  0.463908  0.458010  0.449312  0.499049  0.478608  0.469777\n","285961 -0.177673 -0.132821 -0.039137 -0.082233  0.398131 -0.006746\n","285962  0.355145  0.254361  0.245107  0.267172  0.237769  0.271911\n","285963  0.348215  0.335280  0.315816  0.510952  0.353326  0.372718\n","285964  0.503428  0.443747  0.520630  0.525686  0.453440  0.489386\n","\n","[285965 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"As2sywsfy5Lw","colab_type":"code","colab":{}},"source":["preds = sample_submissions['res']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"n9uSNXCdMvtz","colab_type":"code","colab":{}},"source":["normalized_preds = (preds - preds.min())/(preds - preds.min()).max()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_jPxYI_dMwfG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596034389297,"user_tz":-180,"elapsed":1023311,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"13d21870-a969-4c45-dbd6-5930b160f8da"},"source":["normalized_preds.min(), normalized_preds.max()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.0, 1.0)"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"id":"aLKIV9BIM2RX","colab_type":"code","colab":{}},"source":["submission['rating']= normalized_preds"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"E4cXlOJFPiAr","colab_type":"code","colab":{}},"source":["VERSION = 19\n","submission.to_csv(DIR_TEST+ f'submission_v{VERSION}.csv', index=False)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"yV8CbKHMOKde","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1596034390495,"user_tz":-180,"elapsed":1024502,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"6347e90c-91d6-407b-b722-12d5ff930e66"},"source":["submission"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.569686</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.574666</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.550029</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0.509779</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0.430930</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>285960</th>\n","      <td>285960</td>\n","      <td>0.610741</td>\n","    </tr>\n","    <tr>\n","      <th>285961</th>\n","      <td>285961</td>\n","      <td>0.267233</td>\n","    </tr>\n","    <tr>\n","      <th>285962</th>\n","      <td>285962</td>\n","      <td>0.468106</td>\n","    </tr>\n","    <tr>\n","      <th>285963</th>\n","      <td>285963</td>\n","      <td>0.540774</td>\n","    </tr>\n","    <tr>\n","      <th>285964</th>\n","      <td>285964</td>\n","      <td>0.624876</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>285965 rows × 2 columns</p>\n","</div>"],"text/plain":["            Id    rating\n","0            0  0.569686\n","1            1  0.574666\n","2            2  0.550029\n","3            3  0.509779\n","4            4  0.430930\n","...        ...       ...\n","285960  285960  0.610741\n","285961  285961  0.267233\n","285962  285962  0.468106\n","285963  285963  0.540774\n","285964  285964  0.624876\n","\n","[285965 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"markdown","metadata":{"id":"2BK-kGpyHfsm","colab_type":"text"},"source":["Вроде не выдающийся результат, но на каггле дал 0.77689"]},{"cell_type":"code","metadata":{"id":"tSZqlLeR3Q4Q","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":219,"referenced_widgets":["98ee288b726b4c759097aa393f5427d4","578a3f2cf1ef41e9818d9e847dc09933","025c959d1e1149a2aa4fea448d4c1ae6","762fa91dd67e49eab6b8357297659866","180284b9c0444be6b172d301453412b1","50b49ee003114761afba366637f4a7ca","4a5a7f49a9bd4f639f710e49624446c8","881aadee583c4345b6543693f4a84f64"]},"executionInfo":{"status":"ok","timestamp":1596035995384,"user_tz":-180,"elapsed":901541,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"ffbfb90e-3a31-452f-a4c6-75642408412f"},"source":["def prediction_model_not_features(mtype, h_params, mat_weights):\n","    num_epochs, learning_rate, num_components, alpha = h_params\n","    model = LightFM(learning_rate = learning_rate, \n","                          loss = mtype, \n","                          no_components = num_components,\n","                          random_state = RANDOM_SEED,\n","                          user_alpha = alpha,\n","                          item_alpha = alpha)\n","    model = model.fit(mat_weights, epochs=num_epochs, num_threads=NUM_THREADS)    \n","    return(model)\n","\n","\n","N_FOLDS = 5\n","sample_submissions_not_features = pd.DataFrame(0,columns=[\"sub_1\"], index=submission.index) # куда пишем предикты по каждой модели\n","score_ls_not_features = []\n","X = data[['userid','itemid']]\n","y = data.rating\n","#splits = list(KFold(n_splits=N_FOLDS, shuffle=True, random_state=RANDOM_SEED).split(X, y))\n","\n","splits = list(StratifiedKFold(n_splits=N_FOLDS, shuffle=True, random_state=RANDOM_SEED).split(X, y))\n","\n","\n","for idx, (train_idx, test_idx) in tqdm(enumerate(splits), total=N_FOLDS,):\n","    # use the indexes to extract the folds in the train and validation data\n","    X_train, y_train, X_test, y_test = X.iloc[train_idx], y[train_idx], X.iloc[test_idx], y[test_idx]\n","    # Строим разреженную матрицу \n","#Готовим основную матрицу\n","    (interactions, weights_train) = dataset.build_interactions(((x,y,z) \n","                for x,y, z in zip(X_train.userid.values, X_train.itemid.values, y_train)))\n","    # model for this fold\n","    model_light_not_features = prediction_model_not_features('logistic', params_not_features, weights_train)\n","\n","    # score model on test\n","    test_predict = model_light_not_features.predict(X_test.userid.apply(lambda x: user_id_map[x]).values, X_test.itemid.apply(lambda x: item_id_map[x]).values)\n","\n","    test_score = sklearn.metrics.roc_auc_score(y_test,test_predict)\n","    score_ls_not_features.append(test_score)\n","    print(f\"{idx+1} Fold Test MAPE: {test_score:0.4f}\")\n","    # submissions\n","    sample_submissions_not_features[f'sub_{idx+1}'] = model_light_not_features.predict(test.userid.apply(lambda x: user_id_map[x]).values, test.itemid.apply(lambda x: item_id_map[x]).values)\n","\n"," #   model.save_model(f'catboost_fold_{idx+1}.model')\n","    \n","print(f'Mean Score: {np.mean(score_ls_not_features):0.5f}')\n","print(f'Std Score: {np.std(score_ls_not_features):0.5f}')\n","print(f'Max Score: {np.max(score_ls_not_features):0.5f}')\n","print(f'Min Score: {np.min(score_ls_not_features):0.5f}')    "],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"98ee288b726b4c759097aa393f5427d4","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, max=5.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["1 Fold Test MAPE: 0.7303\n","2 Fold Test MAPE: 0.7325\n","3 Fold Test MAPE: 0.7345\n","4 Fold Test MAPE: 0.7350\n","5 Fold Test MAPE: 0.7330\n","\n","Mean Score: 0.73306\n","Std Score: 0.00166\n","Max Score: 0.73501\n","Min Score: 0.73032\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"hyhiOryhEnBJ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1596035995386,"user_tz":-180,"elapsed":51,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"71e9ceef-7023-4d13-9ef6-c0c9f8292fcc"},"source":["sample_submissions_not_features['res'] = sample_submissions_not_features.mean(axis=1)\n","sample_submissions_not_features"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sub_1</th>\n","      <th>sub_2</th>\n","      <th>sub_3</th>\n","      <th>sub_4</th>\n","      <th>sub_5</th>\n","      <th>res</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.872681</td>\n","      <td>1.970547</td>\n","      <td>1.857385</td>\n","      <td>1.820142</td>\n","      <td>1.794750</td>\n","      <td>1.863101</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.907098</td>\n","      <td>1.525849</td>\n","      <td>0.786301</td>\n","      <td>0.521529</td>\n","      <td>1.279796</td>\n","      <td>1.204115</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.226045</td>\n","      <td>0.944301</td>\n","      <td>0.038497</td>\n","      <td>0.168206</td>\n","      <td>-0.299550</td>\n","      <td>0.215500</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.050269</td>\n","      <td>0.331990</td>\n","      <td>0.417444</td>\n","      <td>0.270822</td>\n","      <td>0.452952</td>\n","      <td>0.304695</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.019630</td>\n","      <td>1.446576</td>\n","      <td>1.192284</td>\n","      <td>0.533416</td>\n","      <td>1.575157</td>\n","      <td>1.353413</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>285960</th>\n","      <td>2.019759</td>\n","      <td>2.011352</td>\n","      <td>1.564522</td>\n","      <td>1.601647</td>\n","      <td>2.112386</td>\n","      <td>1.861933</td>\n","    </tr>\n","    <tr>\n","      <th>285961</th>\n","      <td>-1.883562</td>\n","      <td>-0.999788</td>\n","      <td>-1.837296</td>\n","      <td>-1.713308</td>\n","      <td>-0.138489</td>\n","      <td>-1.314489</td>\n","    </tr>\n","    <tr>\n","      <th>285962</th>\n","      <td>0.861335</td>\n","      <td>0.860885</td>\n","      <td>-0.180254</td>\n","      <td>0.985273</td>\n","      <td>-0.201969</td>\n","      <td>0.465054</td>\n","    </tr>\n","    <tr>\n","      <th>285963</th>\n","      <td>1.818834</td>\n","      <td>1.512112</td>\n","      <td>1.408063</td>\n","      <td>2.121469</td>\n","      <td>2.259250</td>\n","      <td>1.823946</td>\n","    </tr>\n","    <tr>\n","      <th>285964</th>\n","      <td>2.092086</td>\n","      <td>2.145679</td>\n","      <td>2.610312</td>\n","      <td>2.184930</td>\n","      <td>2.012529</td>\n","      <td>2.209107</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>285965 rows × 6 columns</p>\n","</div>"],"text/plain":["           sub_1     sub_2     sub_3     sub_4     sub_5       res\n","0       1.872681  1.970547  1.857385  1.820142  1.794750  1.863101\n","1       1.907098  1.525849  0.786301  0.521529  1.279796  1.204115\n","2       0.226045  0.944301  0.038497  0.168206 -0.299550  0.215500\n","3       0.050269  0.331990  0.417444  0.270822  0.452952  0.304695\n","4       2.019630  1.446576  1.192284  0.533416  1.575157  1.353413\n","...          ...       ...       ...       ...       ...       ...\n","285960  2.019759  2.011352  1.564522  1.601647  2.112386  1.861933\n","285961 -1.883562 -0.999788 -1.837296 -1.713308 -0.138489 -1.314489\n","285962  0.861335  0.860885 -0.180254  0.985273 -0.201969  0.465054\n","285963  1.818834  1.512112  1.408063  2.121469  2.259250  1.823946\n","285964  2.092086  2.145679  2.610312  2.184930  2.012529  2.209107\n","\n","[285965 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"v1vMuOrV7rtI","colab_type":"code","colab":{}},"source":["preds = sample_submissions_not_features['res']\n","normalized_preds = (preds - preds.min())/(preds - preds.min()).max()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZCjX6YXW7rdS","colab_type":"code","colab":{}},"source":["submission['rating']= normalized_preds"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VMUxRpUJEchG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1596035995389,"user_tz":-180,"elapsed":24,"user":{"displayName":"Марина Иванова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg7hezV5y6KHcNMC5xYLMsxx1iVkk9vOkYW2LsY=s64","userId":"06293143360819199290"}},"outputId":"10dfb0ff-5144-4eaf-bbb3-647e397f9a97"},"source":["submission"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.647851</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.572375</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.459145</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0.469361</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0.589474</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>285960</th>\n","      <td>285960</td>\n","      <td>0.647717</td>\n","    </tr>\n","    <tr>\n","      <th>285961</th>\n","      <td>285961</td>\n","      <td>0.283911</td>\n","    </tr>\n","    <tr>\n","      <th>285962</th>\n","      <td>285962</td>\n","      <td>0.487728</td>\n","    </tr>\n","    <tr>\n","      <th>285963</th>\n","      <td>285963</td>\n","      <td>0.643366</td>\n","    </tr>\n","    <tr>\n","      <th>285964</th>\n","      <td>285964</td>\n","      <td>0.687480</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>285965 rows × 2 columns</p>\n","</div>"],"text/plain":["            Id    rating\n","0            0  0.647851\n","1            1  0.572375\n","2            2  0.459145\n","3            3  0.469361\n","4            4  0.589474\n","...        ...       ...\n","285960  285960  0.647717\n","285961  285961  0.283911\n","285962  285962  0.487728\n","285963  285963  0.643366\n","285964  285964  0.687480\n","\n","[285965 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":35}]},{"cell_type":"code","metadata":{"id":"VVAxAkEJ7rRe","colab_type":"code","colab":{}},"source":["VERSION = 18\n","submission.to_csv(DIR_TEST+ f'submission_v{VERSION}.csv', index=False)"],"execution_count":null,"outputs":[]}]}